try:
    uniqueip=set([])
    uniquedomain=set([])
    domains={}
    suspicious={}
    with open ("access.log", "r") as f :
        sorgu_sayi = 0
        suspicious_counter = 0
        for line in f :
            hisse=line.split()
            sorgu_sayi+=1
            ip=hisse[1].strip()
            if len(hisse)>3 and hisse[3]=="CONNECT":
                uniqueip.add(ip)
            
            if len(hisse)>3:
                domainwithport=hisse[2]
                domain = domainwithport.split(':')[0].strip()
                
            if len(hisse)>6 :
                status_code = hisse[5].strip()
            
            if domain not in domains:
                domains[domain] = [1, status_code]#key domaindir value ise listdir listde ise sorgu sayi(olduqca 1-1 artiriram) ve status kod saxlamisam
            
            else:
                domains[domain][0] = domains[domain][0] + 1#burda da 1-1 artiririq sorgulari
                domains[domain][1] = status_code
                
            if domain.endswith(".thm"):
                if domain not in suspicious:
                    suspicious[domain] = [1, {ip: 1}]#1ci 1 hemin domaine olan sorgu sayidir,2ci hisse hemin ip hemin domaine nece defe sorgu edib,burda ise her ipnin nece defe suspicious domain-e etdiyi sorgudur
                else:
                    suspicious[domain][0] += 1
                        
                    if status_code == "200":
                        suspicious[domain][1][ip] = suspicious[domain][1].get(ip, 0) + 1#[1] dedikde ip  [1, {ip: 1}] ip hissesini gotururuk [ip] dedik de sorgu sayini tapiriq,get hissesi ise (key,default  value ) kimi isleyir eger key varsa value-ni qaytar yoxdursa default value tein etmisem
                    
                if suspicious[domain][0] > suspicious_counter:
                    suspicious_counter = suspicious[domain][0]
                    highcount = domain
            
        print(f"muraciet eden umumi source:{len(uniqueip)}")
        #print(f'Proxy servere gelen sorgu sayi:{sorgu_sayi}')
        print(f"2.How many unique domains were accessed by all workstations? : {len(domains)}")
        least_domain = min(domains, key=lambda x: domains[x]) #lambda tek setirlik funksiyadir, x burda domaindir x bir nov key olur burada,bir bir goturur domainleri ve lambda ni cagirir daha sonra return kimi minimum istemisem
        print(f"3.What status code is generated by the HTTP requests to the least accessed domain? : {domains[least_domain][1]}")
        if highcount:
            print(f"4.The suspicious domain with the highest connection attempts is: {highcount}")
            print(f"4.Connection attempts: {suspicious_counter}")
        else:
            print("No domains ending with .thm found in the log.")
        suspicious_ip = max(suspicious[highcount][1], key=lambda x: suspicious[highcount][1][x])
        print(f"5.What is the source IP of the workstation that accessed the malicious domain? : {suspicious_ip}")
            
except Exception as e:
    print(f'Golenilmez xeta bas verdi: {e}')